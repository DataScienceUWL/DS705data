hist(loans$totalAcc)
hist(sqrt(loans$totalAcc))
hist(loans$totalBal)
hist(log(loans$totalBal))
min(loans$totalBal)
hist(sqrt(loans$totalBal))
hist((loans$totalBal)^(1/3))
hist((loans$totalBal)^(1/4))
hist(loans$totalRevLim)
hist(loans$totalRevLim^.25)
hist(loans$avgBal)
hist(loans$avgBal^.25)
hist(loans$bcOpen)
hist(loans$bcOpen^.25)
hist(loans$bcRatio)
hist(loans$totalLim)
hist(loans$totalLim^.25)
hist(loans$totalRevBal)
hist(loans$totalRevBal^.25)
hist(loans$totalIlLim)
hist(loans$totalIlLim^.25)
loans = read.csv('loans50k.csv')
loans = subset(loans,status!="In Grace Period")
loans = subset(loans,status!="Late (16-30 days)")
loans = subset(loans,status!="Late (31-120 days)")
loans = subset(loans,status!="")
loans = subset(loans,status!="Current")
loans = subset(loans, select=-c(loadID,employment,state))
d = dim(loans)
n = d[1]
levels(loans$status) <- list(Good=c("Fully Paid"),
Bad=c("Charged Off","Default"))
#loans$status = factor( loans$status, levels = c("Bad","Good"))
loans = subset(loans,select=-c(employment,state))
levels(loans$verified) <- list(Yes=c("Source Verified","Verified"),
No=c("Not Verified"))
levels(loans$reason) <- list(car="car",
credit_card="credit_card",
debt_consolidation="debt_consolidation",
home = c("home_improvement","house"),
medical="medical",
other=c("major_purchase","moving","other",
"renewable_energy","small_business",
"vacation","wedding"))
loans <- na.omit(loans)
d = dim(loans)
n = d[1]
# make some transformations
loans$income = log(loans$income)
loans$openAcc = log(loans$openAcc)
loans$totalAcc = log(loans$totalAcc)
loans$totalBal = loans$totalBal^.25
loans$totalRevLim = loans$totalRevLim^.25
loans$avgBal = loans$avgBal^.25
loans$bcOpen = loans$bcOpen^.25
loans$totalLim = loans$totalLim^.25
loans$totalRevBal = loans$totalRevBal^.25
loans$totalIlLim = loans$totalIlLim^.25
indtrain = sample(n,size=floor(n*.8))
loans.train = loans[indtrain,]
# remove totalPaid, can't be used as a predictor variable
loans.train = subset(loans.train,select=-c(totalPaid))
loans.test = loans[-indtrain,]
# compute average profit per loan in test set
totProfit = sum( loans.test$totalPaid - loans.test$amount)
fit1 <- glm(status~.,data=loans.train,family="binomial")
summary(fit1)
predprob <- predict(fit1,loans.test,type='response')
threshold <- 0.5
pred_status <- cut( predprob,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion1 <- table(pred_status,loans.test$status)
addmargins(confusion1)
accuracy1=100*sum(diag(confusion1))/sum(sum(confusion1))
ngood = sum( loans.train$status=="Good")
nbad = sum( loans.train$status=="Bad")
indgood = which(loans.train$status=="Good")
indbad = which(loans.train$status=="Bad")
indmorebad = sample(indbad,size=ngood-nbad,replace=TRUE)
ind = c(indgood,indbad,indmorebad)
loans.train.bal = loans.train[ind,]
fit2 <- glm(status~.,data=loans.train.bal,family="binomial")
summary(fit2)
predprob2 <- predict(fit2,loans.test,type='response')
threshold <- 0.5
pred_status2 <- cut( predprob2,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion2 <- table(pred_status2,loans.test$status)
addmargins(confusion2)
accuracy2=100*sum(diag(confusion2))/sum(sum(confusion2))
#explore possible thresholds
thresh = seq(0,1,by=.01)
totprofit1 = 0*thresh
totprofit2 = 0*thresh
weightaveprofit = 0*thresh
accuracy = 0*thresh
numgood = 0*thresh
pctgood = 0*thresh
ntest = dim(loans.test)[1]
for (j in 1:101){
pred_status <- cut( predprob,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask1 = pred_status =="Good"
pred_status2 <- cut( predprob2,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask2 = pred_status2=="Good"
totprofit1[j] = sum( loans.test$totalPaid[mask1]-loans.test$amount[mask1])
totprofit2[j] = sum( loans.test$totalPaid[mask2]-loans.test$amount[mask2])
}
plot(thresh,100*totprofit1/totProfit,ylim=c(0,700))
points(thresh,100*totprofit2/totProfit,col='blue')
abline(h=100,col="red")
maskPerfect = loans.test$status=="Good"
perfectProfit = sum( loans.test$totalPaid[maskPerfect]-loans.test$amount[maskPerfect])
abline(h=100*perfectProfit/totProfit,col="red")
max(totprofit1)
loans = read.csv('loans50k.csv')
loans = subset(loans,status!="In Grace Period")
loans = subset(loans,status!="Late (16-30 days)")
loans = subset(loans,status!="Late (31-120 days)")
loans = subset(loans,status!="")
loans = subset(loans,status!="Current")
loans = subset(loans, select=-c(loadID,employment,state))
d = dim(loans)
n = d[1]
levels(loans$status) <- list(Good=c("Fully Paid"),
Bad=c("Charged Off","Default"))
#loans$status = factor( loans$status, levels = c("Bad","Good"))
loans = subset(loans,select=-c(employment,state))
levels(loans$verified) <- list(Yes=c("Source Verified","Verified"),
No=c("Not Verified"))
levels(loans$reason) <- list(car="car",
credit_card="credit_card",
debt_consolidation="debt_consolidation",
home = c("home_improvement","house"),
medical="medical",
other=c("major_purchase","moving","other",
"renewable_energy","small_business",
"vacation","wedding"))
loans <- na.omit(loans)
d = dim(loans)
n = d[1]
indtrain = sample(n,size=floor(n*.8))
loans.train = loans[indtrain,]
# remove totalPaid, can't be used as a predictor variable
loans.train = subset(loans.train,select=-c(totalPaid))
loans.test = loans[-indtrain,]
# compute average profit per loan in test set
totProfit = sum( loans.test$totalPaid - loans.test$amount)
fit1 <- glm(status~.,data=loans.train,family="binomial")
summary(fit1)
predprob <- predict(fit1,loans.test,type='response')
threshold <- 0.5
pred_status <- cut( predprob,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion1 <- table(pred_status,loans.test$status)
addmargins(confusion1)
accuracy1=100*sum(diag(confusion1))/sum(sum(confusion1))
ngood = sum( loans.train$status=="Good")
nbad = sum( loans.train$status=="Bad")
indgood = which(loans.train$status=="Good")
indbad = which(loans.train$status=="Bad")
indmorebad = sample(indbad,size=ngood-nbad,replace=TRUE)
ind = c(indgood,indbad,indmorebad)
loans.train.bal = loans.train[ind,]
fit2 <- glm(status~.,data=loans.train.bal,family="binomial")
summary(fit2)
predprob2 <- predict(fit2,loans.test,type='response')
threshold <- 0.5
pred_status2 <- cut( predprob2,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion2 <- table(pred_status2,loans.test$status)
addmargins(confusion2)
accuracy2=100*sum(diag(confusion2))/sum(sum(confusion2))
#explore possible thresholds
thresh = seq(0,1,by=.01)
totprofit1 = 0*thresh
totprofit2 = 0*thresh
weightaveprofit = 0*thresh
accuracy = 0*thresh
numgood = 0*thresh
pctgood = 0*thresh
ntest = dim(loans.test)[1]
for (j in 1:101){
pred_status <- cut( predprob,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask1 = pred_status =="Good"
pred_status2 <- cut( predprob2,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask2 = pred_status2=="Good"
totprofit1[j] = sum( loans.test$totalPaid[mask1]-loans.test$amount[mask1])
totprofit2[j] = sum( loans.test$totalPaid[mask2]-loans.test$amount[mask2])
}
plot(thresh,100*totprofit1/totProfit,ylim=c(0,700))
points(thresh,100*totprofit2/totProfit,col='blue')
abline(h=100,col="red")
maskPerfect = loans.test$status=="Good"
perfectProfit = sum( loans.test$totalPaid[maskPerfect]-loans.test$amount[maskPerfect])
abline(h=100*perfectProfit/totProfit,col="red")
max(totProfit)
max(totprofit1)
loans = read.csv('loans50k.csv')
loans = subset(loans,status!="In Grace Period")
loans = subset(loans,status!="Late (16-30 days)")
loans = subset(loans,status!="Late (31-120 days)")
loans = subset(loans,status!="")
loans = subset(loans,status!="Current")
loans = subset(loans, select=-c(loadID,employment,state))
d = dim(loans)
n = d[1]
levels(loans$status) <- list(Good=c("Fully Paid"),
Bad=c("Charged Off","Default"))
#loans$status = factor( loans$status, levels = c("Bad","Good"))
loans = subset(loans,select=-c(employment,state))
levels(loans$verified) <- list(Yes=c("Source Verified","Verified"),
No=c("Not Verified"))
levels(loans$reason) <- list(car="car",
credit_card="credit_card",
debt_consolidation="debt_consolidation",
home = c("home_improvement","house"),
medical="medical",
other=c("major_purchase","moving","other",
"renewable_energy","small_business",
"vacation","wedding"))
loans <- na.omit(loans)
d = dim(loans)
n = d[1]
# make some transformations
loans$income = log(loans$income)
loans$openAcc = log(loans$openAcc)
loans$totalAcc = log(loans$totalAcc)
loans$totalBal = loans$totalBal^.25
loans$totalRevLim = loans$totalRevLim^.25
loans$avgBal = loans$avgBal^.25
loans$bcOpen = loans$bcOpen^.25
loans$totalLim = loans$totalLim^.25
loans$totalRevBal = loans$totalRevBal^.25
loans$totalIlLim = loans$totalIlLim^.25
indtrain = sample(n,size=floor(n*.8))
loans.train = loans[indtrain,]
# remove totalPaid, can't be used as a predictor variable
loans.train = subset(loans.train,select=-c(totalPaid))
loans.test = loans[-indtrain,]
# compute average profit per loan in test set
totProfit = sum( loans.test$totalPaid - loans.test$amount)
fit1 <- glm(status~.,data=loans.train,family="binomial")
summary(fit1)
predprob <- predict(fit1,loans.test,type='response')
threshold <- 0.5
pred_status <- cut( predprob,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion1 <- table(pred_status,loans.test$status)
addmargins(confusion1)
accuracy1=100*sum(diag(confusion1))/sum(sum(confusion1))
ngood = sum( loans.train$status=="Good")
nbad = sum( loans.train$status=="Bad")
indgood = which(loans.train$status=="Good")
indbad = which(loans.train$status=="Bad")
indmorebad = sample(indbad,size=ngood-nbad,replace=TRUE)
ind = c(indgood,indbad,indmorebad)
loans.train.bal = loans.train[ind,]
fit2 <- glm(status~.,data=loans.train.bal,family="binomial")
summary(fit2)
predprob2 <- predict(fit2,loans.test,type='response')
threshold <- 0.5
pred_status2 <- cut( predprob2,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion2 <- table(pred_status2,loans.test$status)
addmargins(confusion2)
accuracy2=100*sum(diag(confusion2))/sum(sum(confusion2))
#explore possible thresholds
thresh = seq(0,1,by=.01)
totprofit1 = 0*thresh
totprofit2 = 0*thresh
weightaveprofit = 0*thresh
accuracy = 0*thresh
numgood = 0*thresh
pctgood = 0*thresh
ntest = dim(loans.test)[1]
for (j in 1:101){
pred_status <- cut( predprob,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask1 = pred_status =="Good"
pred_status2 <- cut( predprob2,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask2 = pred_status2=="Good"
totprofit1[j] = sum( loans.test$totalPaid[mask1]-loans.test$amount[mask1])
totprofit2[j] = sum( loans.test$totalPaid[mask2]-loans.test$amount[mask2])
}
plot(thresh,100*totprofit1/totProfit,ylim=c(0,700))
points(thresh,100*totprofit2/totProfit,col='blue')
abline(h=100,col="red")
maskPerfect = loans.test$status=="Good"
perfectProfit = sum( loans.test$totalPaid[maskPerfect]-loans.test$amount[maskPerfect])
abline(h=100*perfectProfit/totProfit,col="red")
max(totprofit1)
tp1 = totalprofit1
tp1 = totprofit1
loans = read.csv('loans50k.csv')
loans = subset(loans,status!="In Grace Period")
loans = subset(loans,status!="Late (16-30 days)")
loans = subset(loans,status!="Late (31-120 days)")
loans = subset(loans,status!="")
loans = subset(loans,status!="Current")
loans = subset(loans, select=-c(loadID,employment,state))
d = dim(loans)
n = d[1]
levels(loans$status) <- list(Good=c("Fully Paid"),
Bad=c("Charged Off","Default"))
#loans$status = factor( loans$status, levels = c("Bad","Good"))
loans = subset(loans,select=-c(employment,state))
levels(loans$verified) <- list(Yes=c("Source Verified","Verified"),
No=c("Not Verified"))
levels(loans$reason) <- list(car="car",
credit_card="credit_card",
debt_consolidation="debt_consolidation",
home = c("home_improvement","house"),
medical="medical",
other=c("major_purchase","moving","other",
"renewable_energy","small_business",
"vacation","wedding"))
loans <- na.omit(loans)
d = dim(loans)
n = d[1]
indtrain = sample(n,size=floor(n*.8))
loans.train = loans[indtrain,]
# remove totalPaid, can't be used as a predictor variable
loans.train = subset(loans.train,select=-c(totalPaid))
loans.test = loans[-indtrain,]
# compute average profit per loan in test set
totProfit = sum( loans.test$totalPaid - loans.test$amount)
fit1 <- glm(status~.,data=loans.train,family="binomial")
summary(fit1)
predprob <- predict(fit1,loans.test,type='response')
threshold <- 0.5
pred_status <- cut( predprob,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion1 <- table(pred_status,loans.test$status)
addmargins(confusion1)
accuracy1=100*sum(diag(confusion1))/sum(sum(confusion1))
ngood = sum( loans.train$status=="Good")
nbad = sum( loans.train$status=="Bad")
indgood = which(loans.train$status=="Good")
indbad = which(loans.train$status=="Bad")
indmorebad = sample(indbad,size=ngood-nbad,replace=TRUE)
ind = c(indgood,indbad,indmorebad)
loans.train.bal = loans.train[ind,]
fit2 <- glm(status~.,data=loans.train.bal,family="binomial")
summary(fit2)
predprob2 <- predict(fit2,loans.test,type='response')
threshold <- 0.5
pred_status2 <- cut( predprob2,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion2 <- table(pred_status2,loans.test$status)
addmargins(confusion2)
accuracy2=100*sum(diag(confusion2))/sum(sum(confusion2))
#explore possible thresholds
thresh = seq(0,1,by=.01)
totprofit1 = 0*thresh
totprofit2 = 0*thresh
weightaveprofit = 0*thresh
accuracy = 0*thresh
numgood = 0*thresh
pctgood = 0*thresh
ntest = dim(loans.test)[1]
for (j in 1:101){
pred_status <- cut( predprob,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask1 = pred_status =="Good"
pred_status2 <- cut( predprob2,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask2 = pred_status2=="Good"
totprofit1[j] = sum( loans.test$totalPaid[mask1]-loans.test$amount[mask1])
totprofit2[j] = sum( loans.test$totalPaid[mask2]-loans.test$amount[mask2])
}
plot(thresh,100*totprofit1/totProfit,ylim=c(0,700))
points(thresh,100*totprofit2/totProfit,col='blue')
abline(h=100,col="red")
maskPerfect = loans.test$status=="Good"
perfectProfit = sum( loans.test$totalPaid[maskPerfect]-loans.test$amount[maskPerfect])
abline(h=100*perfectProfit/totProfit,col="red")
points(thresh,100*tp1/totProfit,col='green')
points(thresh,100*tp1/totProfit,col='darkgreen')
confusion1
addmargins(confusion1)
loans = read.csv('loans50k.csv')
loans = subset(loans,status!="In Grace Period")
loans = subset(loans,status!="Late (16-30 days)")
loans = subset(loans,status!="Late (31-120 days)")
loans = subset(loans,status!="")
loans = subset(loans,status!="Current")
loans = subset(loans, select=-c(loadID,employment,state))
d = dim(loans)
n = d[1]
levels(loans$status) <- list(Good=c("Fully Paid"),
Bad=c("Charged Off","Default"))
#loans$status = factor( loans$status, levels = c("Bad","Good"))
loans = subset(loans,select=-c(employment,state))
levels(loans$verified) <- list(Yes=c("Source Verified","Verified"),
No=c("Not Verified"))
levels(loans$reason) <- list(car="car",
credit_card="credit_card",
debt_consolidation="debt_consolidation",
home = c("home_improvement","house"),
medical="medical",
other=c("major_purchase","moving","other",
"renewable_energy","small_business",
"vacation","wedding"))
loans <- na.omit(loans)
d = dim(loans)
n = d[1]
# make some transformations
loans$income = log(loans$income)
loans$openAcc = log(loans$openAcc)
loans$totalAcc = log(loans$totalAcc)
loans$totalBal = loans$totalBal^.25
loans$totalRevLim = loans$totalRevLim^.25
loans$avgBal = loans$avgBal^.25
loans$bcOpen = loans$bcOpen^.25
loans$totalLim = loans$totalLim^.25
loans$totalRevBal = loans$totalRevBal^.25
loans$totalIlLim = loans$totalIlLim^.25
indtrain = sample(n,size=floor(n*.8))
loans.train = loans[indtrain,]
# remove totalPaid, can't be used as a predictor variable
loans.train = subset(loans.train,select=-c(totalPaid))
loans.test = loans[-indtrain,]
# compute average profit per loan in test set
totProfit = sum( loans.test$totalPaid - loans.test$amount)
fit1 <- glm(status~.,data=loans.train,family="binomial")
summary(fit1)
predprob <- predict(fit1,loans.test,type='response')
threshold <- 0.5
pred_status <- cut( predprob,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion1 <- table(pred_status,loans.test$status)
addmargins(confusion1)
accuracy1=100*sum(diag(confusion1))/sum(sum(confusion1))
ngood = sum( loans.train$status=="Good")
nbad = sum( loans.train$status=="Bad")
indgood = which(loans.train$status=="Good")
indbad = which(loans.train$status=="Bad")
indmorebad = sample(indbad,size=ngood-nbad,replace=TRUE)
ind = c(indgood,indbad,indmorebad)
loans.train.bal = loans.train[ind,]
fit2 <- glm(status~.,data=loans.train.bal,family="binomial")
summary(fit2)
predprob2 <- predict(fit2,loans.test,type='response')
threshold <- 0.5
pred_status2 <- cut( predprob2,breaks=c(-Inf,threshold,Inf),
labels=c("Good","Bad"))
confusion2 <- table(pred_status2,loans.test$status)
addmargins(confusion2)
accuracy2=100*sum(diag(confusion2))/sum(sum(confusion2))
#explore possible thresholds
thresh = seq(0,1,by=.01)
totprofit1 = 0*thresh
totprofit2 = 0*thresh
weightaveprofit = 0*thresh
accuracy = 0*thresh
numgood = 0*thresh
pctgood = 0*thresh
pctbad = 0*thresh
ntest = dim(loans.test)[1]
for (j in 1:101){
pred_status <- cut( predprob,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask1 = pred_status =="Good"
pred_status2 <- cut( predprob2,breaks=c(-Inf,thresh[j],Inf),
labels=c("Good","Bad"))
mask2 = pred_status2=="Good"
totprofit1[j] = sum( loans.test$totalPaid[mask1]-loans.test$amount[mask1])
totprofit2[j] = sum( loans.test$totalPaid[mask2]-loans.test$amount[mask2])
c1 <- table(pred_status,loans.test$status)
accuracy[j] = sum(diag(c1))/sum(sum(c1))
pctgood[j] = c1[1,1]/(c1[1,1]+c1[2,1])
pctbad[j]= c1[2,2]/(c1[1,2]+c1[2,2])
}
plot(thresh,100*totprofit1/totProfit,ylim=c(0,700))
points(thresh,100*totprofit2/totProfit,col='blue')
abline(h=100,col="red")
maskPerfect = loans.test$status=="Good"
perfectProfit = sum( loans.test$totalPaid[maskPerfect]-loans.test$amount[maskPerfect])
abline(h=100*perfectProfit/totProfit,col="red")
plot(thresh,accuracy)
points(thresh,pctgood,col='red')
plot(thresh,accuracy,ylim=c(0,1))
points(thresh,pctgood,col='red')
points(thresh,pctbad,col='blue')
max(accuracy)
?cumsum
smalldf = data.frame( prob = predprob, profit = loans$totalPaid-loans$amount)
smalldf = data.frame( prob = predprob, profit = loans.test$totalPaid-loans.test$amount)
?which
?order
idx = order(predprob)
smalldf = smalldf[idx,]
smalldf$cumprof = cumsum(smalldf$profit)
head(smalldf)
smalldf = data.frame( prob = predprob, profit = loans.test$totalPaid-loans.test$amount)
idx = order(-predprob)
smalldf = smalldf[idx,]
smalldf$cumprof = cumsum(smalldf$profit)
head(smalldf)
smalldf = data.frame( prob = predprob, profit = loans.test$totalPaid-loans.test$amount)
idx = order(predprob)
smalldf = smalldf[idx,]
smalldf$cumprof = cumsum(smalldf$profit)
plot(smalldf$predprof,smalldf$cumprof)
plot(smalldf$prob,smalldf$cumprof)
setwd("~/Google Drive/baggett_work/DSUWL_github/DS705data")
setwd("~/Google Drive/baggett_work/UWL/Classes_current/Math_480_Rec_Sys/prelim_examples")
